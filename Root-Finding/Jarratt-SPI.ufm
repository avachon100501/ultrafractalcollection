JarrattSPI4 {
init:
  z = pixel
  i = sqrt(-1)
  x = real(z)
  y = imag(z)
  comp = x + y*i
  rad = sqrt(x^2+y^2)
  if (x == 0 && y > 0)
     z = comp
     theta = pi/2
  elseif (x == 0)
     z = comp
     theta = 3*pi/2
  else
     z = comp
    if (x < 0)
     theta = atan(y/x)+pi
    else
     theta = atan(y/x)
    endif
  endif
  if (z == 0)
    znm2 = @p1
    znm1 = @p2
    z = 0
  else
    znm2 = @a*rad*exp(i*theta)
    znm1 = @b*rad*exp(i*theta)
    z = z
  endif
loop:
  fz2 = znm2^4/4 - znm2
  fz1 = znm1^4/4 - znm1
  fz = z^4/4 - z
  temp = z + 0.5*((znm1-z)^2*(fz-fz2)+(znm2-z)^2*(fz1-fz))/((znm1-z)*(fz-fz2)+(znm2-z)*(fz1-fz))
  znm2 = znm1
  znm1 = z
  z = temp
bailout:
  |z - znm1| >= @bailout
default:
  title = "Jarratt (Successive Parabolic Interpolation) 4"
  maxiter = 1000

  param a
    caption = "1st start value"
    default = (1.001, 0)
  endparam

  param b
    caption = "2nd start value"
    default = (0.999, 0)
  endparam

  param p1
    default = (-0.001, 0)
  endparam

  param p2
    default = (0.001, 0)
  endparam

  param bailout
    caption = "Bailout Value"
    default = 1.0e-15
    hint = "The bailout value."
  endparam
}

JarrattSPI9 {
init:
  z = pixel
  i = sqrt(-1)
  x = real(z)
  y = imag(z)
  comp = x + y*i
  rad = sqrt(x^2+y^2)
  if (x == 0 && y > 0)
     z = comp
     theta = pi/2
  elseif (x == 0)
     z = comp
     theta = 3*pi/2
  else
     z = comp
    if (x < 0)
     theta = atan(y/x)+pi
    else
     theta = atan(y/x)
    endif
  endif
  if (z = 0)
    znm2 = p1
    znm1 = p2
  else
    znm2 = @b*rad*exp(i*theta)
    znm1 = @a*rad*exp(i*theta)
    z = z
  endif
loop:
  fz2 = znm2^9/9 + 3*znm2^5 - 16*znm2
  fz1 = znm1^9/9 + 3*znm1^5 - 16*znm1
  fz = z^9/9 + 3*z^5 - 16*z
  temp = z + 0.5*((znm1-z)^2*(fz-fz2)+(znm2-z)^2*(fz1-fz))/((znm1-z)*(fz-fz2)+(znm2-z)*(fz1-fz))
  znm2 = znm1
  znm1 = z
  z = temp
bailout:
  |z - znm1| >= @bailout
default:
  title = "Jarratt (Successive Parabolic Interpolation) 9"
  maxiter = 1000

  param b
    caption = "1st start value"
    default = (1.001, 0)
  endparam

  param a
    caption = "2nd start value"
    default = (0.999, 0)
  endparam

  param bailout
    caption = "Bailout Value"
    default = 1.0e-15
    hint = "The bailout value."
  endparam
}

JarrattSPInegcos {
init:
  z = pixel
  i = sqrt(-1)
  x = real(z)
  y = imag(z)
  comp = x + y*i
  rad = sqrt(x^2+y^2)
  if (x == 0 && y > 0)
     z = comp
     theta = pi/2
  elseif (x == 0)
     z = comp
     theta = 3*pi/2
  else
     z = comp
    if (x < 0)
     theta = atan(y/x)+pi
    else
     theta = atan(y/x)
    endif
  endif
  if (z == 0)
    znm2 = p1
    znm1 = p2
    z = 0
  else
    znm2 = @b*rad*exp(i*theta)
    znm1 = @a*rad*exp(i*theta)
    z = z
  endif
loop:
  fz2 = -cos(znm2)
  fz1 = -cos(znm1)
  fz = -cos(z)
  temp = z + 0.5*((znm1-z)^2*(fz-fz2)+(znm2-z)^2*(fz1-fz))/((znm1-z)*(fz-fz2)+(znm2-z)*(fz1-fz))
  znm2 = znm1
  znm1 = z
  z = temp
bailout:
  |z - znm1| >= @bailout
default:
  title = "Jarratt (Successive Parabolic Interpolation, -cos(z))"
  maxiter = 1000

  param b
    caption = "1st start value"
    default = (1.001, 0)
  endparam

  param a
    caption = "2nd start value"
    default = (0.999, 0)
  endparam

  param bailout
    caption = "Bailout Value"
    default = 1.0e-15
    hint = "The bailout value."
  endparam
}

JarrattSPIatan {
init:
  z = pixel
  i = sqrt(-1)
  x = real(z)
  y = imag(z)
  comp = x + y*i
  rad = sqrt(x^2+y^2)
  if (x == 0 && y > 0)
     z = comp
     theta = pi/2
  elseif (x == 0)
     z = comp
     theta = 3*pi/2
  else
     z = comp
    if (x < 0)
     theta = atan(y/x)+pi
    else
     theta = atan(y/x)
    endif
  endif
  if (z == 0)
    znm2 = p1
    znm1 = p2
    z = 0
  else
    znm2 = @a*rad*exp(i*theta)
    znm1 = @b*rad*exp(i*theta)
    z = z
  endif
loop:
  fz2 = atan(znm2)
  fz1 = atan(znm1)
  fz = atan(z)
  temp = z + 0.5*((znm1-z)^2*(fz-fz2)+(znm2-z)^2*(fz1-fz))/((znm1-z)*(fz-fz2)+(znm2-z)*(fz1-fz))
  znm2 = znm1
  znm1 = z
  z = temp
bailout:
  |z - znm1| >= @bailout
default:
  title = "Jarratt (Successive Parabolic Interpolation, atan(z))"
  maxiter = 1000

  param a
    caption = "1st start value"
    default = (0.999, 0)
  endparam

  param b
    caption = "2nd start value"
    default = (1.001, 0)
  endparam

  param bailout
    caption = "Bailout Value"
    default = 1.0e-15
    hint = "The bailout value."
  endparam
}
