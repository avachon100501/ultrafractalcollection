Schroder3 {
;
; Standard Schroder fractal.
;
init:
  z = pixel
  i = sqrt(-1)
loop:
  zold = z
  f = z^3 - 1
  f1 = 3*z^2
  f2 = 6*z
  z = z - (f*f1)/(f1^2 - f*f2)
bailout:
  |z - zold| >= @bailout
default:
  title = "Schroder 3"
  helpfile = "Uf*.chm"
  helptopic = "Html\formulas\standard\newton.html"
$IFDEF VER50
  rating = recommended
$ENDIF
  maxiter = 100
  center = (0, 0)
  param bailout
    caption = "Bailout value"
    default = 0.0000000000001
    min = 0
$IFDEF VER40
    exponential = true
$ENDIF
    hint = "This parameter defines how soon a convergent orbit bails out while \
            iterating. Smaller values give more precise results but usually \
            require more iterations."
  endparam
}

Schroder4 {
init:
  z = pixel
  i = sqrt(-1)
loop:
  f = z^4 - 1
  f1 = 4*z^3
  f2 = 12*z^2
  zold = z
  z = z - (f*f1)/(f1^2 - f*f2)
bailout:
  |z - zold| >= @bailout
default:
  title = "Schroder 4"
  helpfile = "Uf*.chm"
  helptopic = "Html\formulas\standard\newton.html"
$IFDEF VER50
  rating = recommended
$ENDIF
  maxiter = 100
  center = (0, 0)
  param bailout
    caption = "Bailout value"
    default = 0.0000000000001
    min = 0
$IFDEF VER40
    exponential = true
$ENDIF
    hint = "This parameter defines how soon a convergent orbit bails out while \
            iterating. Smaller values give more precise results but usually \
            require more iterations."
  endparam
}

SchroderG3 {
init:
  z = pixel
  i = sqrt(-1)
loop:
  f = z^3 - 2*z + 2
  f1 = 3*z^2 - 2
  f2 = 6*z
  zold = z
  z = z - (f*f1)/(f1^2 - f*f2)
bailout:
  |z - zold| >= @bailout
default:
  title = "Schroder Generalized 3"
  helpfile = "Uf*.chm"
  helptopic = "Html\formulas\standard\newton.html"
$IFDEF VER50
  rating = recommended
$ENDIF
  maxiter = 100
  center = (0, 0)
  param bailout
    caption = "Bailout value"
    default = 0.0000000000001
    min = 0
$IFDEF VER40
    exponential = true
$ENDIF
    hint = "This parameter defines how soon a convergent orbit bails out while \
            iterating. Smaller values give more precise results but usually \
            require more iterations."
  endparam
}

SchroderG8 {
init:
  z = pixel
  i = sqrt(-1)
loop:
  f = z^8 + 15*z^4 - 16
  f1 = 8*z^7 + 60*z^3
  f2 = 56*z^6 + 180*z^2
  zold = z
  z = z - (f*f1)/(f1^2 - f*f2)
bailout:
  |z - zold| >= @bailout
default:
  title = "Schroder Generalized 8"
  helpfile = "Uf*.chm"
  helptopic = "Html\formulas\standard\newton.html"
$IFDEF VER50
  rating = recommended
$ENDIF
  maxiter = 100
  center = (0, 0)
  param bailout
    caption = "Bailout value"
    default = 0.0000000000001
    min = 0
$IFDEF VER40
    exponential = true
$ENDIF
    hint = "This parameter defines how soon a convergent orbit bails out while \
            iterating. Smaller values give more precise results but usually \
            require more iterations."
  endparam
}

SchroderCos {
init:
  z = pixel
  i = sqrt(-1)
loop:
  f = cos(z)
  f1 = -sin(z)
  f2 = -cos(z)
  zold = z
  z = z - (f*f1)/(f1^2 - f*f2)
bailout:
  |z - zold| >= @bailout
default:
  title = "Schroder (Cosine function)"
  helpfile = "Uf*.chm"
  helptopic = "Html\formulas\standard\newton.html"
$IFDEF VER50
  rating = recommended
$ENDIF
  maxiter = 100
  param bailout
    caption = "Bailout value"
    default = 0.0000000000001
    min = 0
$IFDEF VER40
    exponential = true
$ENDIF
    hint = "This parameter defines how soon a convergent orbit bails out while \
            iterating. Smaller values give more precise results but usually \
            require more iterations."
  endparam
}

SchroderSin {
init:
  z = pixel
  i = sqrt(-1)
loop:
  f = sin(z)
  f1 = cos(z)
  f2 = -sin(z)
  zold = z
  z = z - (f*f1)/(f1^2 - f*f2)
bailout:
  |z - zold| >= @bailout
default:
  title = "Schroder (Sine function)"
  helpfile = "Uf*.chm"
  helptopic = "Html\formulas\standard\newton.html"
$IFDEF VER50
  rating = recommended
$ENDIF
  maxiter = 100
  param bailout
    caption = "Bailout value"
    default = 0.0000000000001
    min = 0
$IFDEF VER40
    exponential = true
$ENDIF
    hint = "This parameter defines how soon a convergent orbit bails out while \
            iterating. Smaller values give more precise results but usually \
            require more iterations."
  endparam
}

SchroderAtan {
init:
  z = pixel
  i = sqrt(-1)
loop:
  f = atan(z)
  f1 = 1/(z^2 + 1)
  f2 = -((2*z)/(z^2 + 1)^2)
  zold = z
  z = z - (f*f1)/(f1^2 - f*f2)
bailout:
  |z - zold| >= @bailout
default:
  title = "Schroder (Arctangent function)"
  helpfile = "Uf*.chm"
  helptopic = "Html\formulas\standard\newton.html"
$IFDEF VER50
  rating = recommended
$ENDIF
  maxiter = 100
  center = (0, 0)
  param bailout
    caption = "Bailout value"
    default = 0.0000000000001
    min = 0
$IFDEF VER40
    exponential = true
$ENDIF
    hint = "This parameter defines how soon a convergent orbit bails out while \
            iterating. Smaller values give more precise results but usually \
            require more iterations."
  endparam
}
