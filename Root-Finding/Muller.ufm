MullerAtan {
init:
  z = pixel
  ooz = p2
  oz = p1
  i = sqrt(-1)
loop:
  f2 = atan(ooz)
  f1 = atan(oz)
  f = atan(z)
  q = (z - oz)/(oz - ooz)
  a = q * f - q * (q + 1) * f1 + f2 * q^2
  b = (1 + 2 * q) * f - f1 * (1 + q)^2 + f2 * q^2
  c = (1 + q) * f
  x = b + sqrt(b^2 - 4*a*c)
  y = b - sqrt(b^2 - 4*a*c)
  if (|x| > |y|)
     temp = z - (z - oz) * (2 * c) / x
  else
     temp = z - (z - oz) * (2 * c) / y
  endif

  ooz = oz
  oz = z
  z = temp
bailout:
  |z - oz| > @bailout

default:
  title = "Muller (Arctangent function)"
  maxiter = 1000

  param p1
    caption = "1st start value"
    default = 0.0000000001
    hint = "Start value for oz."
  endparam

  param p2
    caption = "2nd start value"
    default = 0.000000001
    hint = "Start value for ooz."
  endparam

  param bailout
    caption = "Bailout Value"
    default = 1.0e-20
    hint = "The bailout value."
  endparam
}


MullerCos {
init:
  z = pixel
  ooz = p2
  oz = p1
  i = sqrt(-1)
loop:
  f2 = cos(ooz)
  f1 = cos(oz)
  f = cos(z)
  q = (z - oz)/(oz - ooz)
  a = q * f - q * (q + 1) * f1 + f2 * q^2
  b = (1 + 2 * q) * f - f1 * (1 + q)^2 + f2 * q^2
  c = (1 + q) * f
  x = b + sqrt(b^2 - 4*a*c)
  y = b - sqrt(b^2 - 4*a*c)
  if (|x| > |y|)
     temp = z - (z - oz) * (2 * c) / x
  else
     temp = z - (z - oz) * (2 * c) / y
  endif

  ooz = oz
  oz = z
  z = temp
bailout:
  |z - oz| > @bailout

default:
  title = "Muller (Cosine function)"
  maxiter = 1000

  param p1
    caption = "1st start value"
    default = 0.0000000001
    hint = "Start value for oz."
  endparam

  param p2
    caption = "2nd start value"
    default = 0.000000001
    hint = "Start value for ooz."
  endparam

  param bailout
    caption = "Bailout Value"
    default = 1.0e-20
    hint = "The bailout value."
  endparam
}


MullerSin {
init:
  z = pixel
  ooz = p2
  oz = p1
  i = sqrt(-1)
loop:
  f2 = sin(ooz)
  f1 = sin(oz)
  f = sin(z)
  q = (z - oz)/(oz - ooz)
  a = q * f - q * (q + 1) * f1 + f2 * q^2
  b = (1 + 2 * q) * f - f1 * (1 + q)^2 + f2 * q^2
  c = (1 + q) * f
  x = b + sqrt(b^2 - 4*a*c)
  y = b - sqrt(b^2 - 4*a*c)
  if (|x| > |y|)
     temp = z - (z - oz) * (2 * c) / x
  else
     temp = z - (z - oz) * (2 * c) / y
  endif

  ooz = oz
  oz = z
  z = temp
bailout:
  |z - oz| > @bailout

default:
  title = "Muller (Sine function)"
  maxiter = 1000

  param p1
    caption = "1st start value"
    default = 0.0000000001
    hint = "Start value for oz."
  endparam

  param p2
    caption = "2nd start value"
    default = 0.000000001
    hint = "Start value for ooz."
  endparam

  param bailout
    caption = "Bailout Value"
    default = 1.0e-20
    hint = "The bailout value."
  endparam
}

Muller3 {
init:
  z = pixel
  ooz = p2
  oz = p1
  i = sqrt(-1)
loop:
  f2 = ooz^3 - 1
  f1 = oz^3 - 1
  f = z^3 - 1
  q = (z - oz)/(oz - ooz)
  a = q * f - q * (q + 1) * f1 + f2 * q^2
  b = (1 + 2 * q) * f - f1 * (1 + q)^2 + f2 * q^2
  c = (1 + q) * f
  x = b + sqrt(b^2 - 4*a*c)
  y = b - sqrt(b^2 - 4*a*c)
  if (|x| > |y|)
     temp = z - (z - oz) * (2 * c) / x
  else
     temp = z - (z - oz) * (2 * c) / y
  endif

  ooz = oz
  oz = z
  z = temp
bailout:
  |z - oz| > @bailout

default:
  title = "Muller 3"
  maxiter = 1000

  param p1
    caption = "1st start value"
    default = 0.0000000001
    hint = "Start value for oz."
  endparam

  param p2
    caption = "2nd start value"
    default = 0.000000001
    hint = "Start value for ooz."
  endparam

  param bailout
    caption = "Bailout Value"
    default = 1.0e-20
    hint = "The bailout value."
  endparam
}

Muller4 {
init:
  z = pixel
  ooz = p2
  oz = p1
  i = sqrt(-1)
loop:
  f2 = ooz^4 - 1
  f1 = oz^4 - 1
  f = z^4 - 1
  q = (z - oz)/(oz - ooz)
  a = q * f - q * (q + 1) * f1 + f2 * q^2
  b = (1 + 2 * q) * f - f1 * (1 + q)^2 + f2 * q^2
  c = (1 + q) * f
  x = b + sqrt(b^2 - 4*a*c)
  y = b - sqrt(b^2 - 4*a*c)
  if (|x| > |y|)
     temp = z - (z - oz) * (2 * c) / x
  else
     temp = z - (z - oz) * (2 * c) / y
  endif

  ooz = oz
  oz = z
  z = temp
bailout:
  |z - oz| > @bailout

default:
  title = "Muller 4"
  maxiter = 1000

  param p1
    caption = "1st start value"
    default = 0.0000000001
    hint = "Start value for oz."
  endparam

  param p2
    caption = "2nd start value"
    default = 0.000000001
    hint = "Start value for ooz."
  endparam

  param bailout
    caption = "Bailout Value"
    default = 1.0e-20
    hint = "The bailout value."
  endparam
}

MullerG3 {
init:
  z = pixel
  ooz = p2
  oz = p1
  i = sqrt(-1)
loop:
  f2 = ooz^3 - 2*ooz + 2
  f1 = oz^3 - 2*oz + 2
  f = z^3 - 2*z + 2
  q = (z - oz)/(oz - ooz)
  a = q * f - q * (q + 1) * f1 + f2 * q^2
  b = (1 + 2 * q) * f - f1 * (1 + q)^2 + f2 * q^2
  c = (1 + q) * f
  x = b + sqrt(b^2 - 4*a*c)
  y = b - sqrt(b^2 - 4*a*c)
  if (|x| > |y|)
     temp = z - (z - oz) * (2 * c) / x
  else
     temp = z - (z - oz) * (2 * c) / y
  endif

  ooz = oz
  oz = z
  z = temp
bailout:
  |z - oz| > @bailout

default:
  title = "Muller Generalized 3"
  maxiter = 1000

  param p1
    caption = "1st start value"
    default = 0.0000000001
    hint = "Start value for oz."
  endparam

  param p2
    caption = "2nd start value"
    default = 0.000000001
    hint = "Start value for ooz."
  endparam

  param bailout
    caption = "Bailout Value"
    default = 1.0e-20
    hint = "The bailout value."
  endparam
}

MullerG8 {
init:
  z = pixel
  ooz = p2
  oz = p1
  i = sqrt(-1)
loop:
  f2 = ooz^8 + 15*ooz^4 - 16
  f1 = oz^8 + 15*oz^4 - 16
  f = z^8 + 15*z^4 - 16
  q = (z - oz)/(oz - ooz)
  a = q * f - q * (q + 1) * f1 + f2 * q^2
  b = (1 + 2 * q) * f - f1 * (1 + q)^2 + f2 * q^2
  c = (1 + q) * f
  x = b + sqrt(b^2 - 4*a*c)
  y = b - sqrt(b^2 - 4*a*c)
  if (|x| > |y|)
     temp = z - (z - oz) * (2 * c) / x
  else
     temp = z - (z - oz) * (2 * c) / y
  endif

  ooz = oz
  oz = z
  z = temp
bailout:
  |z - oz| > @bailout

default:
  title = "Muller Generalized 8"
  maxiter = 1000

  param p1
    caption = "1st start value"
    default = 0.0000000001
    hint = "Start value for oz."
  endparam

  param p2
    caption = "2nd start value"
    default = 0.000000001
    hint = "Start value for ooz."
  endparam

  param bailout
    caption = "Bailout Value"
    default = 1.0e-20
    hint = "The bailout value."
  endparam
}

MullerPoly {
init:
  z = pixel
  ooz = p2
  oz = p1
  i = sqrt(-1)
loop:
  f2 = @a10*ooz^10 + @a9*ooz^9 + @a8*ooz^8 + @a7*ooz^7 + @a6*ooz^6 + @a5*ooz^5 + @a4*ooz^4 + @a3*ooz^3 + @a2*ooz^2 + @a1*ooz + @a0
  f1 = @a10*oz^10 + @a9*oz^9 + @a8*oz^8 + @a7*oz^7 + @a6*oz^6 + @a5*oz^5 + @a4*oz^4 + @a3*oz^3 + @a2*oz^2 + @a1*oz + @a0
  f = @a10*z^10 + @a9*z^9 + @a8*z^8 + @a7*z^7 + @a6*z^6 + @a5*z^5 + @a4*z^4 + @a3*z^3 + @a2*z^2 + @a1*z + @a0
  q = (z - oz)/(oz - ooz)
  a = q * f - q * (q + 1) * f1 + f2 * q^2
  b = (1 + 2 * q) * f - f1 * (1 + q)^2 + f2 * q^2
  c = (1 + q) * f
  x = b + sqrt(b^2 - 4*a*c)
  y = b - sqrt(b^2 - 4*a*c)
  if (|x| > |y|)
     temp = z - (z - oz) * (2 * c) / x
  else
     temp = z - (z - oz) * (2 * c) / y
  endif

  ooz = oz
  oz = z
  z = temp
bailout:
  |z - oz| > @bailout

default:
  title = "Muller Polynomial"
  maxiter = 1000

  param p1
    caption = "1st start value"
    default = 0.0000000001
    hint = "Start value for oz."
  endparam

  param p2
    caption = "2nd start value"
    default = 0.000000001
    hint = "Start value for ooz."
  endparam

  param a10
    default = (0, 0)
  endparam
  param a9
    default = (0, 0)
  endparam
  param a8
    default = (0, 0)
  endparam
  param a7
    default = (0, 0)
  endparam
  param a6
    default = (0, 0)
  endparam
  param a5
    default = (0, 0)
  endparam
  param a4
    default = (0, 0)
  endparam
  param a3
    default = (1, 0)
  endparam
  param a2
    default = (0, 0)
  endparam
  param a1
    default = (0, 0)
  endparam
  param a0
    default = (-1, 0)
  endparam

  param bailout
    caption = "Bailout Value"
    default = 1.0e-20
    hint = "The bailout value."
  endparam
}
