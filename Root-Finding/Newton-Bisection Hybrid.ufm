NewtonBisection3 {
init:
  z = pixel
  i = sqrt(-1)
loop:

 if (a > b)
      a = initb
      b = inita
 endif
     f = z^3 - 1
     f1 = 3*z^2
     fa = @a^3 - 1
     fb = @b^3 - 1
     laststep = @b - @a
     zold = @b
  if (f1 == 0) ; Avoid dividing by zero
           if ((fa * f) <= 0)
               b = z
           else
               a = z
           endif
        z = (@a + @b)/2
   else
     zold = z
     z = z - f/f1
   endif
  laststep = abs(z - zold)
  if (abs(f * 2) > abs(laststep * f1)) ; Decreasing slowly
           if ((fa * f) <= 0)
               b = z
           else
               a = z
           endif
           z = (@a + @b)/2
     else
       zold = z
       z = z - f/f1
     endif
  if (z <= @a) || (z >= @b) ; Avoid going outside interval
           if ((fa * f) <= 0)
               b = z
           else
               a = z
           endif
           z = (@a + @b)/2
   else
     if ((f * fa) < 0) ; Shrink interval
       b = z
       fb = f
     else
       a = z
       fa = f
     endif
   endif

bailout:
  |z - zold| >= @bailout
default:
  title = "Newton-Bisection 3"
  helpfile = "Uf*.chm"
  helptopic = "Html\formulas\standard\newton.html"
$IFDEF VER50
  rating = recommended
$ENDIF
  maxiter = 100
  center = (0, 0)
  param bailout
    caption = "Bailout value"
    default = 0.00001
    min = 0
$IFDEF VER40
    exponential = true
$ENDIF
    hint = "This parameter defines how soon a convergent orbit bails out while \
            iterating. Smaller values give more precise results but usually \
            require more iterations."
  endparam
}


NewtonBisection4 {
init:
  z = pixel
  i = sqrt(-1)
loop:
 if (a > b)
      a = initb
      b = inita
 endif
     f = z^4 - 1
     f1 = 4*z^3
     fa = @a^4 - 1
     fb = @b^4 - 1
     laststep = @b - @a
     zold = @b
  if (f1 == 0) ; Avoid dividing by zero
           if ((fa * f) <= 0)
               b = z
           else
               a = z
           endif
        z = (@a + @b)/2
   else
     zold = z
     z = z - f/f1
   endif
  laststep = abs(z - zold)
  if (abs(f * 2) > abs(laststep * f1)) ; Decreasing slowly
           if ((fa * f) <= 0)
               b = z
           else
               a = z
           endif
           z = (@a + @b)/2
     else
       zold = z
       z = z - f/f1
     endif
  if (z <= @a) || (z >= @b) ; Avoid going outside interval
           if ((fa * f) <= 0)
               b = z
           else
               a = z
           endif
           z = (@a + @b)/2
   else
     if ((f * fa) < 0) ; Shrink interval
       b = z
       fb = f
     else
       a = z
       fa = f
     endif
   endif
bailout:
  |z - zold| >= @bailout
default:
  title = "Newton-Bisection 4"
  helpfile = "Uf*.chm"
  helptopic = "Html\formulas\standard\newton.html"
$IFDEF VER50
  rating = recommended
$ENDIF
  maxiter = 100
  center = (0, 0)
  param bailout
    caption = "Bailout value"
    default = 0.00001
    min = 0
$IFDEF VER40
    exponential = true
$ENDIF
    hint = "This parameter defines how soon a convergent orbit bails out while \
            iterating. Smaller values give more precise results but usually \
            require more iterations."
  endparam
}

NewtonBisection_Atan {
init:
  z = pixel
  i = sqrt(-1)
loop:
 if (a > b)
      a = initb
      b = inita
 endif
     f = atan(z)
     f1 = 1/(z^2 + 1)
     fa = atan(@a)
     fb = atan(@b)
     laststep = @b - @a
     zold = @b
  if (f1 == 0) ; Avoid dividing by zero
           if ((fa * f) <= 0)
               b = z
           else
               a = z
           endif
        z = (@a + @b)/2
   else
     zold = z
     z = z - f/f1
   endif
  laststep = abs(z - zold)
  if (abs(f * 2) > abs(laststep * f1)) ; Decreasing slowly
           if ((fa * f) <= 0)
               b = z
           else
               a = z
           endif
           z = (@a + @b)/2
     else
       zold = z
       z = z - f/f1
     endif
  if (z <= @a) || (z >= @b) ; Avoid going outside interval
           if ((fa * f) <= 0)
               b = z
           else
               a = z
           endif
           z = (@a + @b)/2
   else
     if ((f * fa) < 0) ; Shrink interval
       b = z
       fb = f
     else
       a = z
       fa = f
     endif
   endif
bailout:
  |z - zold| >= @bailout
default:
  title = "Newton-Bisection (Arctangent function)"
  helpfile = "Uf*.chm"
  helptopic = "Html\formulas\standard\newton.html"
  maxiter = 100
  center = (0, 0)
  param a
    caption = "a value"
    default = (1, 0)
  endparam
  param b
    caption = "b value"
    default = (2, 0)
  endparam
  param bailout
    caption = "Bailout value"
    default = 0.00001
    min = 0
$IFDEF VER40
    exponential = true
$ENDIF
    hint = "This parameter defines how soon a convergent orbit bails out while \
            iterating. Smaller values give more precise results but usually \
            require more iterations."
  endparam
}

NewtonBisection3_1 {
init:
  z = pixel
  i = sqrt(-1)
loop:
 if (a > b)
      a = initb
      b = inita
 endif
     f = (z - 1.75)^3
     f1 = 3*(z - 1.75)^2
     fa = atan(@a)
     fb = atan(@b)
     laststep = @b - @a
     zold = @b
  if (f1 == 0) ; Avoid dividing by zero
           if ((fa * f) <= 0)
               b = z
           else
               a = z
           endif
        z = (@a + @b)/2
   else
     zold = z
     z = z - f/f1
   endif
  laststep = abs(z - zold)
  if (abs(f * 2) > abs(laststep * f1)) ; Decreasing slowly
           if ((fa * f) <= 0)
               b = z
           else
               a = z
           endif
           z = (@a + @b)/2
     else
       zold = z
       z = z - f/f1
     endif
  if (z <= @a) || (z >= @b) ; Avoid going outside interval
           if ((fa * f) <= 0)
               b = z
           else
               a = z
           endif
           z = (@a + @b)/2
   else
     if ((f * fa) < 0) ; Shrink interval
       b = z
       fb = f
     else
       a = z
       fa = f
     endif
   endif
bailout:
  |z - zold| >= @bailout
default:
  title = "Newton-Bisection (z - 1.75)^3"
  helpfile = "Uf*.chm"
  helptopic = "Html\formulas\standard\newton.html"
$IFDEF VER50
  rating = recommended
$ENDIF
  maxiter = 100
  center = (0, 0)
  param bailout
    caption = "Bailout value"
    default = 0.00001
    min = 0
$IFDEF VER40
    exponential = true
$ENDIF
    hint = "This parameter defines how soon a convergent orbit bails out while \
            iterating. Smaller values give more precise results but usually \
            require more iterations."
  endparam
}