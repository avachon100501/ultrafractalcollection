NewtonBisection3 {
init:
  z = pixel
  oz = p1
  fz = fzd = oldz = 0
  i = sqrt(-1)
loop:
     complex p1
     oldz = z
     fzd = oz^3 - 1
     fz = z^3 - 1
     f1 = 3*z^2
     oz = oldz
  if (f1 == 0) ; Avoid dividing by zero
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     z = z - fz/f1
   endif
  laststep = abs(z - oz)
  if (abs(fz * 2) > abs(laststep * f1)) ; Decreasing slowly
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     z = z - fz/f1
   endif
  if (z <= oz) || (z >= z) ; Avoid going outside interval
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     if ((fz * fzd) < 0) ; Shrink interval
       z = z
       fz = fz
     else
       oz = z
       fzd = fz
     endif
   endif
bailout:
  |fz| >= @bailout
default:
  title = "Newton-Bisection 3"
  helpfile = "Uf*.chm"
  helptopic = "Html\formulas\standard\newton.html"
$IFDEF VER50
  rating = recommended
$ENDIF
  maxiter = 100
  center = (0, 0)
  param p1
    caption = "Start"
    default = (0, 0)
    hint = "Start value for oz."
  endparam
  param bailout
    caption = "Bailout value"
    default = 0.00001
    min = 0
$IFDEF VER40
    exponential = true
$ENDIF
    hint = "This parameter defines how soon a convergent orbit bails out while \
            iterating. Smaller values give more precise results but usually \
            require more iterations."
  endparam
}


NewtonBisection4 {
init:
  z = #pixel
  oz = p1
  fz = fzd = oldz = 0
  i = sqrt(-1)
loop:
     complex p1
     oldz = z
     fzd = oz^4 - 1
     fz = z^4 - 1
     f1 = 4*z^3
     oz = oldz
  if (f1 == 0) ; Avoid dividing by zero
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     z = z - fz/f1
   endif
  laststep = abs(z - oz)
  if (abs(fz * 2) > abs(laststep * f1)) ; Decreasing slowly
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     z = z - fz/f1
   endif
  if (z <= oz) || (z >= z) ; Avoid going outside interval
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     if ((fz * fzd) < 0) ; Shrink interval
       z = z
       fz = fz
     else
       oz = z
       fzd = fz
     endif
   endif
bailout:
  |fz| >= @bailout
default:
  title = "Newton-Bisection 4"
  helpfile = "Uf*.chm"
  helptopic = "Html\formulas\standard\newton.html"
$IFDEF VER50
  rating = recommended
$ENDIF
  maxiter = 100
  center = (0, 0)
  param p1
    caption = "Start"
    default = (0, 0)
    hint = "Start value for oz."
  endparam
  param bailout
    caption = "Bailout value"
    default = 0.00001
    min = 0
$IFDEF VER40
    exponential = true
$ENDIF
    hint = "This parameter defines how soon a convergent orbit bails out while \
            iterating. Smaller values give more precise results but usually \
            require more iterations."
  endparam
}

NewtonBisectionG3 {
init:
  z = #pixel
  oz = p1
  fz = fzd = oldz = 0
  i = sqrt(-1)
loop:
     complex p1
     oldz = z
     fzd = oz^3 - 2*oz + 2
     fz = z^3 - 2*z + 2
     f1 = 3*z^2 - 2
     oz = oldz
  if (f1 == 0) ; Avoid dividing by zero
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     z = z - fz/f1
   endif
  laststep = abs(z - oz)
  if (abs(fz * 2) > abs(laststep * f1)) ; Decreasing slowly
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     z = z - fz/f1
   endif
  if (z <= oz) || (z >= z) ; Avoid going outside interval
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     if ((fz * fzd) < 0) ; Shrink interval
       z = z
       fz = fz
     else
       oz = z
       fzd = fz
     endif
   endif
bailout:
  |fz| >= @bailout
default:
  title = "Newton-Bisection Generalized 3"
  helpfile = "Uf*.chm"
  helptopic = "Html\formulas\standard\newton.html"
$IFDEF VER50
  rating = recommended
$ENDIF
  maxiter = 100
  center = (0, 0)
  param p1
    caption = "Start"
    default = (0, 0)
    hint = "Start value for oz."
  endparam
  param bailout
    caption = "Bailout value"
    default = 0.00001
    min = 0
$IFDEF VER40
    exponential = true
$ENDIF
    hint = "This parameter defines how soon a convergent orbit bails out while \
            iterating. Smaller values give more precise results but usually \
            require more iterations."
  endparam
}

NewtonBisectionG8 {
init:
  z = #pixel
  oz = p1
  fz = fzd = oldz = 0
  i = sqrt(-1)
loop:
     complex p1
     oldz = z
     fzd = oz^8 + 15*oz^4 - 16
     fz = z^8 + 15*z^4 - 16
     f1 = 8*z^7 + 60*z^3
     oz = oldz
  if (f1 == 0) ; Avoid dividing by zero
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     z = z - fz/f1
   endif
  laststep = abs(z - oz)
  if (abs(fz * 2) > abs(laststep * f1)) ; Decreasing slowly
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     z = z - fz/f1
   endif
  if (z <= oz) || (z >= z) ; Avoid going outside interval
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     if ((fz * fzd) < 0) ; Shrink interval
       z = z
       fz = fz
     else
       oz = z
       fzd = fz
     endif
   endif
bailout:
  |fz| >= @bailout
default:
  title = "Newton-Bisection Generalized 8"
  helpfile = "Uf*.chm"
  helptopic = "Html\formulas\standard\newton.html"
$IFDEF VER50
  rating = recommended
$ENDIF
  maxiter = 100
  center = (0, 0)
  param p1
    caption = "Start"
    default = (0, 0)
    hint = "Start value for oz."
  endparam
  param bailout
    caption = "Bailout value"
    default = 0.00001
    min = 0
$IFDEF VER40
    exponential = true
$ENDIF
    hint = "This parameter defines how soon a convergent orbit bails out while \
            iterating. Smaller values give more precise results but usually \
            require more iterations."
  endparam
}

NewtonBisection_Sin {
init:
  z = #pixel
  oz = p1
  fz = fzd = oldz = 0
  i = sqrt(-1)
loop:
     complex p1
     oldz = z
     fzd = sin(oz)
     fz = sin(z)
     f1 = cos(z)
     oz = oldz
  if (f1 == 0) ; Avoid dividing by zero
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     z = z - fz/f1
   endif
  laststep = abs(z - oz)
  if (abs(fz * 2) > abs(laststep * f1)) ; Decreasing slowly
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     z = z - fz/f1
   endif
  if (z <= oz) || (z >= z) ; Avoid going outside interval
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     if ((fz * fzd) < 0) ; Shrink interval
       z = z
       fz = fz
     else
       oz = z
       fzd = fz
     endif
   endif
bailout:
  |fz| >= @bailout
default:
  title = "Newton-Bisection Sin"
  helpfile = "Uf*.chm"
  helptopic = "Html\formulas\standard\newton.html"
$IFDEF VER50
  rating = recommended
$ENDIF
  maxiter = 100
  center = (0, 0)
  param p1
    caption = "Start"
    default = (0, 0)
    hint = "Start value for oz."
  endparam
  param bailout
    caption = "Bailout value"
    default = 0.00001
    min = 0
$IFDEF VER40
    exponential = true
$ENDIF
    hint = "This parameter defines how soon a convergent orbit bails out while \
            iterating. Smaller values give more precise results but usually \
            require more iterations."
  endparam
}

NewtonBisection_Cos {
init:
  z = #pixel
  oz = p1
  fz = fzd = oldz = 0
  i = sqrt(-1)
loop:
     complex p1
     oldz = z
     fzd = cos(oz)
     fz = cos(z)
     f1 = -sin(z)
     oz = oldz
  if (f1 == 0) ; Avoid dividing by zero
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     z = z - fz/f1
   endif
  laststep = abs(z - oz)
  if (abs(fz * 2) > abs(laststep * f1)) ; Decreasing slowly
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     z = z - fz/f1
   endif
  if (z <= oz) || (z >= z) ; Avoid going outside interval
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     if ((fz * fzd) < 0) ; Shrink interval
       z = z
       fz = fz
     else
       oz = z
       fzd = fz
     endif
   endif
bailout:
  |fz| >= @bailout
default:
  title = "Newton-Bisection Cos"
  helpfile = "Uf*.chm"
  helptopic = "Html\formulas\standard\newton.html"
$IFDEF VER50
  rating = recommended
$ENDIF
  maxiter = 100
  center = (0, 0)
  param p1
    caption = "Start"
    default = (0, 0)
    hint = "Start value for oz."
  endparam
  param bailout
    caption = "Bailout value"
    default = 0.00001
    min = 0
$IFDEF VER40
    exponential = true
$ENDIF
    hint = "This parameter defines how soon a convergent orbit bails out while \
            iterating. Smaller values give more precise results but usually \
            require more iterations."
  endparam
}

NewtonBisection_Atan {
init:
  z = #pixel
  oz = p1
  fz = fzd = oldz = 0
  i = sqrt(-1)
loop:
     complex p1
     oldz = z
     fzd = atan(oz)
     fz = atan(z)
     f1 = 1/(z^2+1)
     oz = oldz
  if (f1 == 0) ; Avoid dividing by zero
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     z = z - fz/f1
   endif
  laststep = abs(z - oz)
  if (abs(fz * 2) > abs(laststep * f1)) ; Decreasing slowly
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     z = z - fz/f1
   endif
  if (z <= oz) || (z >= z) ; Avoid going outside interval
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     if ((fz * fzd) < 0) ; Shrink interval
       z = z
       fz = fz
     else
       oz = z
       fzd = fz
     endif
   endif
bailout:
  |fz| >= @bailout
default:
  title = "Newton-Bisection (atan(z))"
  helpfile = "Uf*.chm"
  helptopic = "Html\formulas\standard\newton.html"
$IFDEF VER50
  rating = recommended
$ENDIF
  maxiter = 100
  center = (0, 0)
  param p1
    caption = "Start"
    default = (0, 0)
    hint = "Start value for oz."
  endparam
  param bailout
    caption = "Bailout value"
    default = 0.00001
    min = 0
$IFDEF VER40
    exponential = true
$ENDIF
    hint = "This parameter defines how soon a convergent orbit bails out while \
            iterating. Smaller values give more precise results but usually \
            require more iterations."
  endparam
}

NewtonBisection_Asin {
init:
  z = #pixel
  oz = p1
  fz = fzd = oldz = 0
  i = sqrt(-1)
loop:
     complex p1
     oldz = z
     fzd = asin(oz)
     fz = asin(z)
     f1 = 1/(sqrt(1-z^2))
     oz = oldz
  if (f1 == 0) ; Avoid dividing by zero
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     z = z - fz/f1
   endif
  laststep = abs(z - oz)
  if (abs(fz * 2) > abs(laststep * f1)) ; Decreasing slowly
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     z = z - fz/f1
   endif
  if (z <= oz) || (z >= z) ; Avoid going outside interval
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     if ((fz * fzd) < 0) ; Shrink interval
       z = z
       fz = fz
     else
       oz = z
       fzd = fz
     endif
   endif
bailout:
  |fz| >= @bailout
default:
  title = "Newton-Bisection (asin(z))"
  helpfile = "Uf*.chm"
  helptopic = "Html\formulas\standard\newton.html"
$IFDEF VER50
  rating = recommended
$ENDIF
  maxiter = 100
  center = (0, 0)
  param p1
    caption = "Start"
    default = (0, 0)
    hint = "Start value for oz."
  endparam
  param bailout
    caption = "Bailout value"
    default = 0.00001
    min = 0
$IFDEF VER40
    exponential = true
$ENDIF
    hint = "This parameter defines how soon a convergent orbit bails out while \
            iterating. Smaller values give more precise results but usually \
            require more iterations."
  endparam
}

NewtonBisection_Acos {
init:
  z = #pixel
  oz = p1
  fz = fzd = oldz = 0
  i = sqrt(-1)
loop:
     complex p1
     oldz = z
     fzd = acos(oz)
     fz = acos(z)
     f1 = -1/(sqrt(1-z^2))
     oz = oldz
  if (f1 == 0) ; Avoid dividing by zero
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     z = z - fz/f1
   endif
  laststep = abs(z - oz)
  if (abs(fz * 2) > abs(laststep * f1)) ; Decreasing slowly
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     z = z - fz/f1
   endif
  if (z <= oz) || (z >= z) ; Avoid going outside interval
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     if ((fz * fzd) < 0) ; Shrink interval
       z = z
       fz = fz
     else
       oz = z
       fzd = fz
     endif
   endif
bailout:
  |fz| >= @bailout
default:
  title = "Newton-Bisection (acos(z))"
  helpfile = "Uf*.chm"
  helptopic = "Html\formulas\standard\newton.html"
$IFDEF VER50
  rating = recommended
$ENDIF
  maxiter = 100
  center = (0, 0)
  param p1
    caption = "Start"
    default = (0, 0)
    hint = "Start value for oz."
  endparam
  param bailout
    caption = "Bailout value"
    default = 0.00001
    min = 0
$IFDEF VER40
    exponential = true
$ENDIF
    hint = "This parameter defines how soon a convergent orbit bails out while \
            iterating. Smaller values give more precise results but usually \
            require more iterations."
  endparam
}

NewtonBisection3_1 {
init:
  z = #pixel
  oz = p1
  fz = fzd = oldz = 0
  i = sqrt(-1)
loop:
     complex p1
     oldz = z
     fzd = (oz - 1.75)^3
     fz = (z - 1.75)^3
     f1 = 3*(z - 1.75)^2
     oz = oldz
  if (f1 == 0) ; Avoid dividing by zero
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     z = z - fz/f1
   endif
  laststep = abs(z - oz)
  if (abs(fz * 2) > abs(laststep * f1)) ; Decreasing slowly
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     z = z - fz/f1
   endif
  if (z <= oz) || (z >= z) ; Avoid going outside interval
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     if ((fz * fzd) < 0) ; Shrink interval
       z = z
       fz = fz
     else
       oz = z
       fzd = fz
     endif
   endif
bailout:
  |fz| >= @bailout
default:
  title = "Newton-Bisection (z - 1.75)^3"
  helpfile = "Uf*.chm"
  helptopic = "Html\formulas\standard\newton.html"
$IFDEF VER50
  rating = recommended
$ENDIF
  maxiter = 100
  center = (0, 0)
  param p1
    caption = "Start"
    default = (0, 0)
    hint = "Start value for oz."
  endparam
  param bailout
    caption = "Bailout value"
    default = 0.00001
    min = 0
$IFDEF VER40
    exponential = true
$ENDIF
    hint = "This parameter defines how soon a convergent orbit bails out while \
            iterating. Smaller values give more precise results but usually \
            require more iterations."
  endparam
}

NewtonBisection11_1 {
init:
  z = #pixel
  oz = p1
  fz = fzd = oldz = 0
  i = sqrt(-1)
loop:
     complex p1
     oldz = z
     fzd = (oz - 5)^11
     fz = (z - 5)^11
     f1 = 11*(z - 5)^10
     oz = oldz
  if (f1 == 0) ; Avoid dividing by zero
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     z = z - fz/f1
   endif
  laststep = abs(z - oz)
  if (abs(fz * 2) > abs(laststep * f1)) ; Decreasing slowly
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     z = z - fz/f1
   endif
  if (z <= oz) || (z >= z) ; Avoid going outside interval
     z = (oz + z)/2
           if ((fzd * fz) <= 0)
               z = z
           else
               oz = z
           endif
   else
     if ((fz * fzd) < 0) ; Shrink interval
       z = z
       fz = fz
     else
       oz = z
       fzd = fz
     endif
   endif
bailout:
  |fz| >= @bailout
default:
  title = "Newton-Bisection (z - 5)^11"
  helpfile = "Uf*.chm"
  helptopic = "Html\formulas\standard\newton.html"
$IFDEF VER50
  rating = recommended
$ENDIF
  maxiter = 100
  center = (0, 0)
  param p1
    caption = "Start"
    default = (0, 0)
    hint = "Start value for oz."
  endparam
  param bailout
    caption = "Bailout value"
    default = 0.00001
    min = 0
$IFDEF VER40
    exponential = true
$ENDIF
    hint = "This parameter defines how soon a convergent orbit bails out while \
            iterating. Smaller values give more precise results but usually \
            require more iterations."
  endparam
}
